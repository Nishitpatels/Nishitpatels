# -*- coding: utf-8 -*-
"""Final-PROJECT1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sh7BOEthZ9h-K2MQ_lfZzzDoiPcGa_WH

**Hand Written Digit Prediction - Classification Analysis**

**Objective**

The primary objectives of this machine learning project are to explore and understand the MNIST dataset, preprocess the data for effective model training, construct a neural network with convolutional and dense layers for accurate handwritten digit prediction, optimize the model through experimentation with architectures and hyperparameters, document the code with clear comments for ease of comprehension and modification, showcase the project on GitHub for accessibility and sharing, design it to be versatile for adaptation to other classification tasks, and ultimately, foster a learning environment that encourages exploration and expansion of knowledge in the realm of machineÂ learning.
"""

# import libraries
import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

# import data
from sklearn.datasets import load_digits

df = load_digits()

_, axes = plt.subplots(nrowa=1, ncols=4, figsize=(10, 3))
for ax, image, label in zip(axes, df.images, df.target):
  ax.set_axis_off()
  ax.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
  ax.set_title("Training: %i" % label)

df.images.shape

df.images[0]

df.images[0].shape

len(df.images)

n_samples = len(df.images)
data = df.images.reshape(n_samples, -1)

data[0]

data[0].shape

data.shape

data.min()

data.max()

data = data/16

data.min()

data.max()

data[0]

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test= train_test_split(data,df.target, test_size=0.3)

x_train.shape, x_test.shape, y_train.shape, y_test.shape

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(x_train, y_train)

y_pred = rf.predict(x_test)

y_pred

from sklearn.metrics import confusion_matrix, classification_report

confusion_matrix(y_test, y_pred)

print(classification_report(y_test, y_pred))

"""**Explanation**

This repository showcases a machine learning project for handwritten digit prediction, utilizing the MNIST dataset. The project encompasses key stages such as data preprocessing, model building with TensorFlow/Keras, training, evaluation, and prediction. The Python script is well-commented for clarity and ease of modification. Explore this repository to understand the fundamental steps involved in a classification analysis project. Feel free to adapt the code for other classification tasks, experiment with different datasets, and further your understanding of machine learning concepts.


"""